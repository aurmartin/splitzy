// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`GroupScreen should render correctly 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <RNCSafeAreaView
    edges={
      {
        "bottom": "additive",
        "left": "additive",
        "right": "additive",
        "top": "additive",
      }
    }
    style={
      {
        "flex": 1,
      }
    }
  >
    <RNCSafeAreaView
      edges={
        {
          "bottom": "additive",
          "left": "additive",
          "right": "additive",
          "top": "additive",
        }
      }
      style={
        [
          {
            "backgroundColor": "hsl(200 15% 90%)",
            "flex": 1,
            "padding": 8,
          },
          {
            "paddingBottom": 0,
          },
        ]
      }
    >
      <View
        style={
          {
            "alignItems": "center",
            "flexDirection": "row",
            "marginBottom": 16,
          }
        }
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "backgroundColor": "white",
              "borderRadius": 24,
              "padding": 8,
            }
          }
          testID="topbar-back-button"
        >
          <Text />
        </View>
        <Text
          style={
            [
              {
                "fontSize": 32,
                "fontWeight": "400",
                "lineHeight": 38,
              },
              {
                "marginLeft": 16,
              },
            ]
          }
        >
          test group name
        </Text>
        <View
          style={
            {
              "flexDirection": "row",
              "gap": 8,
              "marginLeft": "auto",
            }
          }
        >
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              [
                {
                  "backgroundColor": "white",
                  "borderRadius": 24,
                  "padding": 8,
                },
                {
                  "overflow": "hidden",
                },
              ]
            }
            testID="share-group"
          >
            <Text />
          </View>
        </View>
      </View>
      <View
        style={
          {
            "alignItems": "center",
            "backgroundColor": "white",
            "borderRadius": 10,
            "marginBottom": 16,
            "padding": 16,
          }
        }
      >
        <Text
          style={
            [
              {
                "fontSize": 22,
                "fontWeight": "400",
                "lineHeight": 28,
              },
            ]
          }
        >
          Vous êtes à jour
        </Text>
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            [
              [
                {
                  "alignItems": "center",
                  "borderRadius": 40,
                  "height": 40,
                  "justifyContent": "center",
                  "paddingHorizontal": 16,
                },
                {
                  "backgroundColor": "hsl(200 40% 50%)",
                },
                {
                  "marginTop": 8,
                },
              ],
              {
                "overflow": "hidden",
              },
            ]
          }
        >
          <Text
            style={
              [
                {
                  "fontSize": 16,
                  "fontWeight": "400",
                  "lineHeight": 24,
                },
                {
                  "color": "white",
                },
              ]
            }
          >
            Remboursements
          </Text>
        </View>
      </View>
      <RCTScrollView
        ListEmptyComponent={
          <Text>
            Aucune dépense
          </Text>
        }
        ListFooterComponent={
          <View
            style={
              {
                "height": 80,
              }
            }
          />
        }
        contentContainerStyle={
          {
            "gap": 8,
          }
        }
        data={[]}
        getItem={[Function]}
        getItemCount={[Function]}
        initialNumToRender={10}
        keyExtractor={[Function]}
        maxToRenderPerBatch={10}
        onContentSizeChange={[Function]}
        onLayout={[Function]}
        onMomentumScrollBegin={[Function]}
        onMomentumScrollEnd={[Function]}
        onRefresh={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        refreshControl={
          <RefreshControlMock
            onRefresh={[Function]}
            refreshing={false}
          />
        }
        refreshing={false}
        renderItem={[Function]}
        scrollEventThrottle={0.0001}
        stickyHeaderIndices={[]}
        style={
          {
            "borderRadius": 8,
          }
        }
        testID="expenses-list"
        windowSize={10}
      >
        <RCTRefreshControl />
        <View>
          <Text
            onLayout={[Function]}
            style={
              [
                {
                  "fontSize": 16,
                  "fontWeight": "400",
                  "lineHeight": 24,
                },
              ]
            }
          >
            Aucune dépense
          </Text>
          <View
            onLayout={[Function]}
          >
            <View
              style={
                {
                  "height": 80,
                }
              }
            />
          </View>
        </View>
      </RCTScrollView>
      <View
        style={
          {
            "bottom": 20,
            "position": "absolute",
            "right": 8,
            "zIndex": 100,
          }
        }
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            [
              {
                "backgroundColor": "hsl(200 40% 50%)",
                "borderRadius": 16,
                "elevation": 2,
                "padding": 16,
                "shadowColor": "black",
              },
              {
                "overflow": "hidden",
              },
            ]
          }
          testID="fab-button"
        >
          <Text />
        </View>
      </View>
    </RNCSafeAreaView>
  </RNCSafeAreaView>
</RNCSafeAreaProvider>
`;
